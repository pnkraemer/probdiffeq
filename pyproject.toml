[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm>=8",
]
build-backend = "setuptools.build_meta"

[project]
name = "probdiffeq"
authors = [
    {name="Nicholas KrÃ¤mer", email="pekra@dtu.dk"}
]
description = "Probabilistic numerical solvers for differential equations"
readme = "README.md"
requires-python=">=3.10"  # Match JAX's requirements
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]
dependencies = ["mypy_extensions"]

[project.optional-dependencies]
cpu = [
    "jax[cpu]",
]
test =[
    "pytest",
    "pytest-xdist",
    "pytest-cases",
    "diffeqzoo",
    "diffrax",
    "equinox",
]
format-and-lint =[
    "pre-commit",
]
doc = [
    "jupytext",
    "jupyter",
    "matplotlib",
    "jupytext",
    "diffeqzoo",
    "tueplots",
    "tqdm",
    "optax",
    "blackjax>=1.0.0",
    "diffrax",
    "numba",
    "mkdocs",
    "mkdocs-material",
    "mkdocs-exclude",
    "mkdocstrings-python",
    "mkdocstrings",
    "mkdocs-jupyter",
    "mypy_extensions",
]


[tool.setuptools.packages.find]
# list of folders that contain the packages (["."] by default)
where = ["."]
# package names should match these glob patterns (["*"] by default)
include = ["probdiffeq*"]


[tool.setuptools_scm]
version_file = "probdiffeq/_version.py"

[project.urls]
"Documentation" = "https://pnkraemer.github.io/probdiffeq/"
"Issue tracker" = "https://github.com/pnkraemer/probdiffeq/issues"


[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["dist", "build", "dev", "typings"]


[tool.ruff]
include = ["**.py", "**/pyproject.toml", "**.ipynb"]
# Same as Black.
line-length = 88
indent-width = 4

# See: https://beta.ruff.rs/docs/rules/
[tool.ruff.lint]
select = [
    # pycodestyle (warning, error)
    "W",
    "E",
    # Pyflakes:
    "F",
    # pydocstyle:
    "D",
    # pyupgrade:
    "UP",
    # flake8-bugbear:
    "B",
    # flake8-builtins:
    "A",
    # flake8-import-conventions:
    "ICN",
    # flake8-pytest-style:
    "PT",
    # flake8-quotes:
    "Q",
    # flake8-return:
    "RET",
    # flake8-simplify:
    "SIM",
    # flake8-unused-arguments:
    "ARG",
    # Ruff-specific rules:
    "RUF",
    # isort:
    "I",
    # flake8-errormsg:
    "EM",
    # tryceratops:
    "TRY",
]
ignore = [
    # warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D203",
    # warning: `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible.
    "D213",
    # zip(..., strict=True/False) is not supported on Python < 3.10
    "B905",
    # Magic methods don't need a docstring:
    "D105",
    # Some backend's names shadow builtins, eg backend.abc. Ignore the warnings.
    "A005",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
# The typing-backend mainly consists of import statements
# so we ignore 'unused import' in this file
"probdiffeq/backend/typing*" = ["F401"]
# Auxiliary functions and tests don't need docstring-enforcement:
"probdiffeq/util/*" = ["D102", "D103"]
"probdiffeq/impl/*" = ["D102"]
"probdiffeq/backend/*" = ["D103"]
"tests/*" = ["D103"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.ruff.format]
# Use `\n` line endings for all files
line-ending = "lf"
# Prefer single quotes over double quotes.
quote-style = "double"
skip-magic-trailing-comma = true
