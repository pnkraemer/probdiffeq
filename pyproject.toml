[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "setuptools_scm[toml]>=6.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "dirty-tag"
write_to = "probdiffeq/_version.py"
write_to_template = """
# pylint: skip-file
# coding: utf-8
# file generated by setuptools_scm
# don't change, don't track in version control
version = \"{version}\"
"""


[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["dist", "build", "dev", "typings"]
addopts = ["--cov=probdiffeq", "--cov-report=html"]


# This is how we measure coverage; it is purely an internal/local thing for now.
# That means that we don't display test coverage, but use it to guide refactoring
# the tests.

[tool.coverage.run]
source = ["probdiffeq/*"]
omit = ["probdiffeq/doc_util/*"]

[tool.coverage.report]
exclude_also = [
    # Debugging-only code should not be measured
    "def __repr__",
    # Interfaces should not be measured
    "@abc.abstractmethod",
    "raise NotImplementedError",
    # Tree flattening/unflattening is not always called but important
    # once functions are jitted by the user
    "def tree_flatten",
    "def tree_unflatten",
    ]


[tool.ruff]
include = ["*.py", "**/pyproject.toml", "*.ipynb"]
# See: https://beta.ruff.rs/docs/rules/
select = [
    # pycodestyle (warning, error)
    "W",
    "E",
    # Pyflakes:
    "F",
    # pydocstyle:
    "D",
    # pyupgrade:
    "UP",
    # flake8-bugbear:
    "B",
    # flake8-builtins:
    "A",
    # flake8-import-conventions:
    "ICN",
    # flake8-pytest-style:
    "PT",
    # flake8-quotes:
    "Q",
    # flake8-return:
    "RET",
    # flake8-simplify:
    "SIM",
    # flake8-unused-arguments:
    "ARG",
    # Ruff-specific rules:
    "RUF",
    # isort:
    "I",
    # flake8-errormsg:
    "EM",
    # tryceratops:
    "TRY",
]
ignore = [
    # warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D203",
    # warning: `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible.
    "D213",
    # zip(..., strict=True/False) is not supported on Python < 3.10
    "B905",
    # Magic methods don't need a docstring:
    "D105",
]


[tool.ruff.per-file-ignores]
# Auxiliary functions and tests don't need docstring-enforcement:
"probdiffeq/util/*" = ["D102", "D103"]
"probdiffeq/impl/*" = ["D102"]
"probdiffeq/backend/*" = ["D103"]
"tests/*" = ["D103"]

[tool.ruff.pydocstyle]
convention = "numpy"
